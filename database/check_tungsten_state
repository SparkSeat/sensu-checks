#!/usr/bin/env ruby

# If the state of any defined replication service is one we don't
# like the look of - go into a given state

require 'json'
require_relative '../base'

class CheckTungstenState < Check
  check_name 'Tungsten Replication State'

  def run
    failures = []
    failtype = nil

    data = JSON.parse(`trepctl services -json`)

    data.each do |service|
      state = service['state']
      failure = states[state] || nil

      if failure
        failures << service['serviceName']
        failtype = failure unless failtype == :critical
      end
    end

    if failtype
      send(failtype, failures.join(', '))
    else
      ok 'All services healthy'
    end
  end

  private

  def states
    # Any state which should return a status other than 'ok', and its exit type
    # http://docs.continuent.com/tungsten-replicator-2.2/operations-status-states.html
    {
      'OFFLINE:ERROR' => :critical,
    }
  end

end
